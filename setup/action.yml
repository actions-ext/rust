name: Setup Rust
description: 'Ensure Rust compiler and utilities are available, and setup caching'

inputs:
  kind:
    type: choice
    description: "Whether to install just a default target, or all targets (e.g. for during deployments / wheel building)"
    default: "full"
    options:
        - full
        - wasm

runs:
  using: 'composite'
  steps:
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: clippy, rustfmt

    # - name: Setup Rust
    #   uses: actions-rs/toolchain@v1
    #   with:
    #     profile: minimal
    #     toolchain: nightly
    #     components: clippy
    #     override: true

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ runner.os }}

    - name: Setup cargo cache
      uses: actions/cache@v3
      with:
          path: |
              ~/.cargo/bin/
              ~/.cargo/registry/index/
              ~/.cargo/registry/cache/
              ~/.cargo/git/db/
              **/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - run: |
        rustup target add aarch64-unknown-linux-gnu
        rustup target add x86_64-unknown-linux-gnu
      shell: bash
      if: ${{ inputs.kind == 'full' && runner.os == 'Linux' }}

    - run: |
        rustup target add aarch64-apple-darwin
        rustup target add x86_64-apple-darwin
      shell: bash
      if: ${{ inputs.kind == 'full' && runner.os == 'macOS' }}

    - run: |
        rustup target add x86_64-pc-windows-msvc
        rustup target add aarch64-pc-windows-msvc
      shell: bash
      if: ${{ inputs.kind == 'full' && runner.os == 'Windows' }}

    - run: rustup target add wasm32-unknown-unknown
      shell: bash
      if: ${{ inputs.kind == 'wasm' }}
